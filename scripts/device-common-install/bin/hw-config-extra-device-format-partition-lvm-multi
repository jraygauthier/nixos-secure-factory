#!/usr/bin/env bash
#
# Creates a lvm virtual drive that span multiple physical partitions.
# Created partition
#
# Parameters:
#
# - $1: The lvm volume group name.
# - $2: The lvm logical volume name.
# - $3: The filesystem label to give to this virtual filesystem.
# - $4: The filesystem type (currently only supports 'ext4').
# - $@ / remaining: The list of partitions you which to include in the volume group.
#   Note that your final virtual filesystem will be as big as the sum of the sizes
#   of these partitions (TSize = P1Size + P2Size + ..).
#
# Usage:
#
# $ this-script "my-vg-name" "my-lv-name" "my-fs-name" "ext4" "/dev/sda1" "/dev/sdb1"
#
# Should result in a virtual ext4 '/dev/my-vg-name/my-lv-name' filesystem with global
# fs label 'my-fs-name' that spans over the "/dev/sda1" and "/dev/sdb1" partitions.
#
set -euf -o pipefail
device_common_install_sh_lib_dir="$("$(dirname "$0")/pkg-nsf-device-common-install-get-sh-lib-dir")"

# Source some device specific tools.
. "$device_common_install_sh_lib_dir/tools.sh"
ensure_run_from_nixos_live_cd

_effect() { 1>&2 echo "$" "$@"; "$@"; }

declare data_vg_label="${1?}"
declare data_lv_label="${2?}"
declare data_fs_label="${3?}"
declare data_fs_type="${4?}"
shift 4

declare partitions=( "$@" )

declare -A supported_fs_types=( ["ext4"]=1 )
check_supported_fs_type() {
  declare fs_type="${1?}"
  if [[ -z "$fs_type" ]] || ! [[ "${supported_fs_types["$fs_type"]+x}" = "x" ]]; then
    1>&2 echo "ERROR: this script does not support the '$fs_type' filesystem!"
    1>&2 printf " ->  Please use one of the following: {"
    1>&2 printf "%s," "${!supported_fs_types[@]}"
    1>&2 printf "}\n"
    exit 1
  fi
}

check_supported_fs_type "$data_fs_type"

declare partition
for partition in "${partitions[@]}"; do
  _effect pvcreate -y "$partition"
done
_effect pvdisplay

# Create a volume group that spans all specified physical partitions.
_effect vgcreate -y "$data_vg_label" "${partitions[@]}"
_effect vgdisplay
_effect lvcreate -y -l '100%FREE' -n "$data_lv_label" "$data_vg_label"
_effect lvdisplay
_effect "mkfs.$data_fs_type" -L "$data_fs_label" "/dev/$data_vg_label/$data_lv_label"

_effect lsblk -o name,mountpoint,label,size,uuid

_effect lvs
