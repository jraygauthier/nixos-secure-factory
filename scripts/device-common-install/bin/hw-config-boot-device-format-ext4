#!/usr/bin/env bash
set -euf -o pipefail
device_common_install_sh_lib_dir="$("$(dirname "$0")/pkg-nsf-device-common-install-get-sh-lib-dir")"

# Source some device specific tools.
. "$device_common_install_sh_lib_dir/tools.sh"
ensure_run_from_nixos_live_cd

declare boot_device
boot_device="${1?}"

# Currently, expect a partitioning compatible with what is
# performed by 'hw-config-boot-device-partition-efi'
# or 'hw-config-boot-device-partition-legacy'.
declare nixos_part
nixos_part="$(get_device_partition_by_1b_index "${boot_device}" "1")"
declare swap_part
swap_part="$(get_device_partition_by_1b_index "${boot_device}" "2")"
declare boot_part
boot_part="$(get_device_partition_by_1b_index "${boot_device}" "3")"

wipefs -f -a "$nixos_part"
mkfs.ext4 -L nixos "$nixos_part"
wipefs -f -a "$swap_part"
mkswap -L swap "$swap_part"

if parted "$boot_device" -- print | grep -q ESP > /dev/null \
    || parted "$boot_device" -- print | grep -q ESP2; then
  wipefs -f -a "$boot_part"
  mkfs.fat -F 32 -n boot "$boot_part"
fi
# Print the result
lsblk -o name,mountpoint,label,size,uuid
